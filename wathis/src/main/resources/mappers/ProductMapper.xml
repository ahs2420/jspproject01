<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mappers.ProductMapper">
	<sql id="getInclude">
		WHERE
		(p.title like CONCAT('%',#{words},'%') or p.keyword like CONCAT('%',#{words},'%'))
		<if test="category_id != null">
			<if test="category_id != ''">
				AND p.category_id=#{category_id}
			</if>
		</if>
		<if test="ingChk == 'true'">
			AND curdate() between p.start_date and p.end_date
		</if>
		<if test="status_chk==null">
			AND p.status >= 1
		</if>
		
	</sql>
	<select id="getAll" resultType="productvo">
		SELECT 
		id,
		member_id,
		category_id,
		audit_id,
		status,
		title,
		sub_title,
		video_chk,
		img_upload_dir,
		main_img,
		img,
		content,
		price,
		start_date,
		end_date,
		keyword,
		reg_date
		FROM tb_product
		ORDER BY id DESC

	</select>
	<select id="getCount" resultType="int">
	
	</select>
	<select id="getProList" resultType="productvo">
		SELECT * FROM tb_product WHERE id = #{id} order by id desc LIMIT 1
	
	</select>
	<select id="getOne" resultType="productvo">
	
	</select>
	<select id="getProductId" resultType="int">
		SELECT 
		id
		FROM tb_product
		WHERE audit_id=#{audit_id}
		
	</select>
	
	<select id="getProductList" resultType="map">
		SELECT 
			p.id,
			p.img_upload_dir,
			p.main_img,
			p.title,
			p.start_date,
			p.end_date,
			p.price,
			p.status,
			c.title as cate,
			m.marker_name,
			sum(o.price + o.donation) as current_funding,
			count(o.id) as funding_count
		FROM tb_product as p 
		JOIN tb_audit as a ON p.audit_id=a.id 
		JOIN tb_maker_info as m ON a.id=m.audit_id 
		JOIN tb_category as c ON p.category_id=c.id
		LEFT OUTER JOIN tb_order as o ON o.product_id = p.id
	    <include refid="getInclude"></include>
		GROUP BY p.id
		ORDER BY p.id desc
		Limit #{pageStart},#{pagePer}
	</select>
	<select id="getProductCount" resultType="int">
		SELECT 
			count(p.id)
		FROM tb_product as p JOIN tb_audit as a ON p.audit_id=a.id JOIN tb_maker_info as m ON a.id=m.audit_id JOIN tb_category as c ON p.category_id=c.id
		<include refid="getInclude"></include>
	</select>
	<select id="getProductDetailAudit" resultType="productvo">
		SELECT id,
			member_id,
			category_id,
			audit_id,
			status,
			title,
			sub_title,
			video_chk,
			img_upload_dir,
			main_img,
			img,
			content,
			price,
			start_date,
			end_date,
			keyword,
			reg_date
		FROM tb_product
		WHERE audit_id=#{audit_id}
	</select>
	<select id="getProductDetail" resultType="productvo">
		SELECT id,
			member_id,
			category_id,
			audit_id,
			status,
			title,
			sub_title,
			video_chk,
			img_upload_dir,
			main_img,
			img,
			content,
			price,
			start_date,
			end_date,
			keyword,
			reg_date
		FROM tb_product
		WHERE id=#{id}
		
	</select>
	<select id="getProAutoStatusSuccessList" resultType="productvo">
		SELECT p.id,p.price FROM 
		tb_product as p 
		JOIN tb_order as o ON p.id = o.product_id 
		WHERE 
		p.status=2 AND 
		curdate() > end_date
		GROUP BY p.id 
		HAVING SUM(o.price+o.donation) >= p.price
	</select>
	<select id="getProAutoStatusFailList" resultType="productvo">
		SELECT p.id,p.price FROM tb_product as p 
		JOIN tb_order as o ON p.id = o.product_id
		WHERE 
		p.status=2 AND 
		curdate() > end_date
		GROUP BY p.id 
		HAVING p.price > SUM(o.price+o.donation) 
	</select>
	<insert id="setProduct">
		insert into tb_product SET
		member_id=#{member_id},
		category_id=#{category_id},
		audit_id=#{audit_id},
		title=#{title},
		sub_title=#{sub_title},
		video_chk=#{video_chk},
		img_upload_dir=#{img_upload_dir},
		main_img=#{main_img},
		img=#{img},
		content=#{content},
		price=#{price},
		start_date=#{start_date},
		end_date=#{end_date},
		keyword=#{keyword}
	</insert>
	
	<update id="updatePro">
		update tb_product SET
			category_id=#{category_id},
			title=#{title},
			sub_title=#{sub_title},
			video_chk=#{video_chk},
			img_upload_dir=#{img_upload_dir},
			main_img=#{main_img},
			img=#{img},
			content=#{content},
			price=#{price},
			start_date=#{start_date},
			end_date=#{end_date},
			keyword=#{keyword}
			where 
			id=#{id}
	</update>
	
	
	<update id="updateProAutoStatus">
		update tb_product SET
			status = #{status}
			where 
			id=#{id}
	</update>
	<update id="updateProAutoStatusIng">
		update tb_product SET
			status = 2
			where 
			curdate() between start_date and end_date AND status=1
	</update>
	
	<delete id="deleteItem">
		DELETE FROM tb_product
		WHERE id = #{id}
	</delete>
</mapper>